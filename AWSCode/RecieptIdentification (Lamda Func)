
#Analyzes text in a document stored in an S3 bucket. 
import boto3
import io
from io import BytesIO
import sys
import json
import re

def process_text_analysis(bucket, document):

    #Get the document from S3
    s3_connection = boto3.resource('s3')
                          
    s3_object = s3_connection.Object(bucket,document)
    s3_response = s3_object.get()

    stream = io.BytesIO(s3_response['Body'].read())\

    # Analyze the document
    client = boto3.client('textract')# THIS IS DIRECTLY FROM YOUR API DOCUMENTATION :-):):):)
    
    image_binary = stream.getvalue()
    response = client.analyze_document(Document={'Bytes': image_binary},
        FeatureTypes=["TABLES", "FORMS"])
  

    return response['Blocks']


def main():

    bucket = 'reciptbucket'
    document = 'recipt3.jpg'
    previtem = ''
    itemlist = []
    
    blocks=process_text_analysis(bucket,document)
    for item in blocks:
        if item["BlockType"] == "LINE":
            text = item['Text']
            if len(text) > 3 and (text[-3] == '.' or text[-3] == ','):
                itemparse = re.findall('\d*[.,]?\d+',text)
                itemlist.append([previtem, itemparse[-1]])
                if previtem == 'Total':
                    break
            previtem = text
    return itemlist


def my_handler(event, context): 
    ret = main()
    return {
        'statusCode': 200,
        'headers' : { 'Content-Type' : 'application/json' },
        'body' : json.dumps(ret)
    }
